cmake_minimum_required (VERSION 3.4)

#
# ASSETMANAGER Version
#

set (ASSETMANAGER_VERSION_MAJOR 1)
set (ASSETMANAGER_VERSION_MINOR 0)
set (ASSETMANAGER_VERSION_PATCH 0)
set (ASSETMANAGER_VERSION_STAGE "stable")

#
# Version from CI
#

if (DEFINED ENV{ASSETMANAGER_VERSION_MAJOR})
    set (ASSETMANAGER_VERSION_MAJOR $ENV{ASSETMANAGER_VERSION_MAJOR})
endif()

if (DEFINED ENV{ASSETMANAGER_VERSION_MINOR})
    set (ASSETMANAGER_VERSION_MINOR $ENV{ASSETMANAGER_VERSION_MINOR})
endif()

if (DEFINED ENV{ASSETMANAGER_VERSION_PATCH})
    set (ASSETMANAGER_VERSION_PATCH $ENV{ASSETMANAGER_VERSION_PATCH})
endif()

if (DEFINED ENV{ASSETMANAGER_VERSION_STAGE})
    set (ASSETMANAGER_VERSION_STAGE $ENV{ASSETMANAGER_VERSION_STAGE})
endif()

if (NOT DEFINED ASSETMANAGER_REVISION)
    if (DEFINED ENV{GIT_COMMIT})
        string (SUBSTRING $ENV{GIT_COMMIT} 0 8 ASSETMANAGER_REVISION)
    elseif (ASSETMANAGER_VERSION_STAGE STREQUAL "snapshot")
        execute_process (
            COMMAND git rev-parse --short=8 HEAD
            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
            OUTPUT_VARIABLE ASSETMANAGER_REVISION
            OUTPUT_STRIP_TRAILING_WHITESPACE
        )
    endif()
endif()

if (DEFINED ASSETMANAGER_REVISION)
    string(LENGTH ${ASSETMANAGER_REVISION} ASSETMANAGER_REVISION_LENGTH)
    if (NOT ((ASSETMANAGER_REVISION MATCHES "^[a-f0-9]+") AND (ASSETMANAGER_REVISION_LENGTH EQUAL "8")))
        message (FATAL_ERROR "ASSETMANAGER_REVISION ('${ASSETMANAGER_REVISION}') should be a short commit hash")
    endif()
    unset (ASSETMANAGER_REVISION_LENGTH)
else()
	set (ASSETMANAGER_REVISION "0badc0de")
endif()

if (DEFINED ENV{BUILD_NUMBER})
    set (ASSETMANAGER_BUILD_NUMBER $ENV{BUILD_NUMBER})
else()
    set (ASSETMANAGER_BUILD_NUMBER 1)
endif()

string (TIMESTAMP ASSETMANAGER_BUILD_DATE "%Y%m%d" UTC)
set (ASSETMANAGER_SNAPSHOT_INFO ".${ASSETMANAGER_VERSION_STAGE}.${ASSETMANAGER_REVISION}")

if (ASSETMANAGER_VERSION_STAGE STREQUAL "snapshot")
    set (ASSETMANAGER_VERSION_TAG "${ASSETMANAGER_VERSION_STAGE}.b${ASSETMANAGER_BUILD_NUMBER}-${ASSETMANAGER_REVISION}")
else()
    set (ASSETMANAGER_VERSION_TAG "${ASSETMANAGER_VERSION_STAGE}")
endif()

set (ASSETMANAGER_VERSION "${ASSETMANAGER_VERSION_MAJOR}.${ASSETMANAGER_VERSION_MINOR}.${ASSETMANAGER_VERSION_PATCH}")
set (ASSETMANAGER_VERSION_STRING "${ASSETMANAGER_VERSION}-${ASSETMANAGER_VERSION_TAG}")
message (STATUS "Full ASSETMANAGER version string is '" ${ASSETMANAGER_VERSION_STRING} "'")

add_definitions (-DASSETMANAGER_VERSION="${ASSETMANAGER_VERSION}")
add_definitions (-DASSETMANAGER_VERSION_STRING="${ASSETMANAGER_VERSION_STRING}")
add_definitions (-DASSETMANAGER_REVISION="${ASSETMANAGER_REVISION}")
add_definitions (-DASSETMANAGER_BUILD_DATE="${ASSETMANAGER_BUILD_DATE}")
add_definitions (-DASSETMANAGER_BUILD_NUMBER=${ASSETMANAGER_BUILD_NUMBER})

if (ASSETMANAGER_DEVELOPER_MODE)
    add_definitions (-DASSETMANAGER_DEVELOPER_MODE=1)
endif()